{"mappings":"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","sources":["script.js"],"sourcesContent":["'use strict';\n\nclass Workout {\n  date = new Date();\n\n  // using the last 10 numbers of a date object as the id. not as ideal in the real world\n  id = (Date.now() + '').slice(-10);\n  // clicks = 0;\n\n  constructor(coords, distance, duration) {\n    this.coords = coords; // [latitude, longitude]\n    this.distance = distance; // in kms\n    this.duration = duration; // in mins\n  }\n\n  _setDescription() {\n    // prettier-ignore\n    const months = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\n\n    this.description = `${this.type[0].toUpperCase() + this.type.slice(1)} on ${\n      months[this.date.getMonth()]\n    } ${this.date.getDate()}`;\n  }\n\n  // click() {\n  //   this.clicks++;\n  //   console.log(this.clicks);\n  //   return this.clicks;\n  // }\n}\n\n// child class of Workout {}\nclass Running extends Workout {\n  // type = 'running';\n\n  constructor(coords, distance, duration, cadence) {\n    super(coords, distance, duration);\n    this.type = 'running';\n    this.cadence = cadence;\n\n    // calling functions in the constructor\n    this.calcPace();\n    this._setDescription();\n  }\n\n  calcPace() {\n    // defined in mins/km (UK)\n    // defined in miles/km (US)\n    this.pace = this.duration / this.distance;\n    return this;\n  }\n}\n\n// child class of workout {}\nclass Cycling extends Workout {\n  // type = 'cycling';\n\n  constructor(coords, distance, duration, elevationGain) {\n    super(coords, distance, duration);\n    this.type = 'cycling';\n    this.elevationGain = elevationGain;\n\n    // calling functions in the constructor\n    this.calcSpeed();\n    this._setDescription();\n  }\n\n  calcSpeed() {\n    // defined in km/h\n    this.speed = this.distance / this.duration;\n    return this;\n  }\n}\n// const run1 = new Running([23, -17], 100, 120, 2);\n// console.log(run1);\n/////////////////////////////////////////////////////////////////////////////\n// APPLICATION ARCHITECTURE\n\nconst form = document.querySelector('.form');\nconst containerWorkouts = document.querySelector('.workouts');\nconst inputType = document.querySelector('.form__input--type');\nconst inputDistance = document.querySelector('.form__input--distance');\nconst inputDuration = document.querySelector('.form__input--duration');\nconst inputCadence = document.querySelector('.form__input--cadence');\nconst inputElevation = document.querySelector('.form__input--elevation');\n\nclass App {\n  // Private instance properties\n  #map;\n  #mapEvent;\n  #mapZoomLevel = 13;\n  #workouts = [];\n\n  constructor() {\n    // Get users position\n    this._getPosition();\n\n    // Get data from local storage\n    this._getFromLocalStorage();\n\n    // Adding an Event Listener to the form\n    form.addEventListener('submit', this._newWorkout.bind(this));\n\n    // Adding an Event Listener to the input type\n    // adding .bind(this) is not necessary. the function does not use the this keyword in itself\n    inputType.addEventListener('change', this._toggleElevationField.bind(this));\n\n    // Adding an Event Listener to the container (workout)\n    containerWorkouts.addEventListener('click', this._moveToPopup.bind(this));\n  }\n\n  // Private methods\n  // class function for getting current position of the user\n  _getPosition() {\n    if (navigator.geolocation)\n      navigator.geolocation.getCurrentPosition(this._loadMap.bind(this), () => {\n        alert(`Could not get your position`);\n      });\n  }\n\n  _loadMap(position) {\n    const { latitude, longitude } = position.coords;\n\n    const coords = [latitude, longitude];\n    // console.log(`https://www.google.com/maps/@${latitude},${longitude}`);\n\n    this.#map = L.map('map').setView(coords, this.#mapZoomLevel);\n\n    // Setting a default Map Style\n    L.tileLayer('https://{s}.tile.openstreetmap.fr/hot/{z}/{x}/{y}.png', {\n      attribution:\n        '&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors',\n    }).addTo(this.#map);\n\n    // Handling clicks on map\n    this.#map.on('click', this._showForm.bind(this));\n\n    // Render markers on map once app loads\n    this.#workouts.forEach(work => this._renderWorkoutMarker(work));\n  }\n\n  _showForm(mapE) {\n    this.#mapEvent = mapE;\n    // Remove the hidden class from the form\n    form.classList.remove('hidden');\n    // focus on the Distance input form field\n    inputDistance.focus();\n  }\n\n  _hideForm() {\n    // prettier-ignore\n    // Clear fields\n    inputCadence.value = inputDistance.value = inputDuration.value = inputElevation.value = '';\n\n    // Hide the form and add the hidden class to the from\n    form.style.display = 'none';\n    form.classList.add('hidden');\n    setTimeout(() => (form.style.display = 'grid'), 1000);\n  }\n\n  _toggleElevationField(e) {\n    e.preventDefault();\n    inputElevation.closest('.form__row').classList.toggle('form__row--hidden');\n    inputCadence.closest('.form__row').classList.toggle('form__row--hidden');\n  }\n\n  _newWorkout(e) {\n    const type = inputType.value;\n    const distance = +inputDistance.value;\n    const duration = +inputDuration.value;\n\n    const { lat, lng } = this.#mapEvent.latlng;\n    const coords = [lat, lng];\n\n    let workout, className;\n\n    // Helper function for form validation (only numbers)\n    const validInputs = (...inputs) =>\n      inputs.every(inp => Number.isFinite(inp));\n\n    // Helper function for form validation (positive numbers)\n    const allPositive = (...inputs) => inputs.every(inp => inp > 0);\n\n    e.preventDefault();\n\n    // Get data from form\n\n    // If workout is running, create running object\n    if (type === 'running') {\n      const cadence = +inputCadence.value;\n      // className = 'running-popup';\n\n      // Check if data is valid\n      // Guard clause (chexking for the oposite of the actual condition)\n      if (\n        !validInputs(distance, duration, cadence) ||\n        !allPositive(distance, duration, cadence)\n      )\n        return alert(`One or more of the inputs is not a positive number!`);\n\n      // Create new running object\n      workout = new Running(coords, distance, duration, cadence);\n    }\n\n    // If workout is cycling, create cycling object\n    if (type === 'cycling') {\n      const elevation = +inputElevation.value;\n      // className = 'cycling-popup';\n\n      // Check if data is valid\n      // Guard clause (chexking for the oposite of the actual condition)\n      if (\n        !validInputs(distance, duration, elevation) ||\n        !allPositive(distance, duration)\n      )\n        return alert(`One or more of the inputs is not a positive number!`);\n\n      // Create new running object\n      workout = new Cycling(coords, distance, duration, elevation);\n    }\n\n    // Add new object to the workout array\n    this.#workouts.push(workout);\n\n    // Render workout on map as marker\n    this._renderWorkoutMarker(workout);\n\n    // Render workout on list\n    this._renderWorkoutList(workout);\n\n    // Hide form and Clear input fields\n    this._hideForm();\n\n    // Set local storage to all workouts\n    this._setLocalStorage();\n  }\n\n  _renderWorkoutMarker(workout) {\n    L.marker(workout.coords)\n      .addTo(this.#map)\n      .bindPopup(\n        L.popup({\n          maxWidth: 250,\n          minWidth: 100,\n          autoClose: false,\n          closeOnClick: false,\n          className: `${workout.type}-popup`,\n        })\n      )\n      .setPopupContent(\n        `${workout.type === 'running' ? '🏃‍♂️' : '🚴‍♀️'} ${workout.description}`\n      )\n      .openPopup();\n\n    // `Latitude: ${workout.coords[0].toFixed(4)} <br> Longitude: ${workout.coords[1].toFixed(4)}`\n  }\n\n  _renderWorkoutList(workout) {\n    let html = `\n    <li class=\"workout workout--${workout.type}\" data-id=\"${workout.id}\">\n      <h2 class=\"workout__title\">${workout.description}</h2>\n      <div class=\"workout__details\">\n        <span class=\"workout__icon\">${\n          workout.type === 'running' ? '🏃‍♂️' : '🚴‍♀️'\n        } </span>\n        <span class=\"workout__value\">${workout.distance}</span>\n        <span class=\"workout__unit\">km</span>\n      </div>\n      <div class=\"workout__details\">\n        <span class=\"workout__icon\">⏱</span>\n        <span class=\"workout__value\">${workout.duration}</span>\n        <span class=\"workout__unit\">min</span>\n      </div> \n    `;\n\n    if (workout.type === 'running') {\n      html += `\n        <div class=\"workout__details\">\n          <span class=\"workout__icon\">⚡️</span>\n          <span class=\"workout__value\">${workout.pace.toFixed(1)}</span>\n          <span class=\"workout__unit\">min/km</span>\n        </div>\n        <div class=\"workout__details\">\n          <span class=\"workout__icon\">🦶🏼</span>\n          <span class=\"workout__value\">${workout.cadence}</span>\n          <span class=\"workout__unit\">spm</span>\n        </div>\n      </li>`;\n    }\n\n    if (workout.type === 'cycling') {\n      html += `\n        <div class=\"workout__details\">\n          <span class=\"workout__icon\">⚡️</span>\n          <span class=\"workout__value\">${workout.speed.toFixed(1)}</span>\n          <span class=\"workout__unit\">km/h</span>\n        </div>\n        <div class=\"workout__details\">\n          <span class=\"workout__icon\">⛰</span>\n          <span class=\"workout__value\">${workout.elevationGain}</span>\n          <span class=\"workout__unit\">m</span>\n        </div>\n      </li>`;\n    }\n\n    form.insertAdjacentHTML('afterend', html);\n  }\n\n  _moveToPopup(e) {\n    const workoutEL = e.target.closest('.workout');\n\n    // Guard clause\n    if (!workoutEL) return;\n\n    // prettier-ignore\n    const workout = this.#workouts.find(work => work.id === workoutEL.dataset.id);\n\n    // Set view of map to target element\n    this.#map.setView(workout.coords, this.#mapZoomLevel, {\n      animate: true,\n      pan: { duration: 1 },\n    });\n\n    // Using the public Interface\n    // workout.click();\n  }\n\n  _setLocalStorage() {\n    // JSON.stringify() converts objects to strings\n    localStorage.setItem('workouts', JSON.stringify(this.#workouts));\n  }\n\n  _getFromLocalStorage() {\n    // Objects coming from local storage will not inherit all the methods they had before\n    const data = JSON.parse(localStorage.getItem('workouts'));\n\n    // Guard Clause\n    if (!data) return;\n\n    // If Guard Clause returns true\n    this.#workouts = data;\n\n    this.#workouts.forEach(work => this._renderWorkoutList(work));\n  }\n\n  reset() {\n    localStorage.removeItem('workouts');\n    location.reload();\n  }\n}\n\nconst app = new App();\n"],"names":[],"version":3,"file":"index.672d4772.js.map","sourceRoot":"/__parcel_source_root/"}